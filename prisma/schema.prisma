datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "windows"]
}

model User {
  id        Int      @id @default(autoincrement())
  uid       BigInt   @unique @db.BigInt
  uuid      String   @unique @map("uuid") @db.VarChar(36)
  firstName String   @map("first_name") @db.VarChar(50)
  lastName  String   @map("last_name") @db.VarChar(50)
  fullName  String   @map("full_name") @db.VarChar(100)
  email     String   @unique @map("email") @db.VarChar(50)
  phone     String   @map("phone") @db.VarChar(15)
  password  String   @map("password") @db.VarChar(255)
  salt      String   @map("salt") @db.VarChar(16)
  enabled   Boolean  @default(true) @map("enabled")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Account Account[]
  Address Address[]

  @@index([uid, uuid, email, phone, firstName, fullName, password])
  @@map("Users")
}

model Account {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [uuid], references: [uuid])
  uuid        String   @unique @map("uuid") @db.VarChar(36)
  birthdate   DateTime @map("birthdate")
  cpf         String   @unique @map("cpf") @db.VarChar(14)
  rg          String   @unique @map("rg") @db.VarChar(32)
  nickname    String   @unique @map("nickname") @db.VarChar(32)
  picture     Bytes    @map("picture") @db.Blob
  profession  String   @map("profession") @db.VarChar(50)
  company     String   @map("company") @db.VarChar(50)
  description String   @map("description") @db.VarChar(255)

  @@index([uuid, cpf, rg, nickname])
  @@map("Accounts")
}

model Address {
  id           Int    @id @default(autoincrement())
  user         User   @relation(fields: [uuid], references: [uuid])
  uuid         String @unique @map("uuid") @db.VarChar(36)
  street       String @map("street") @db.VarChar(50)
  number       String @map("number") @db.VarChar(50)
  complement   String @map("complement") @db.VarChar(100)
  neighborhood String @map("neighborhood") @db.VarChar(100)
  city         String @map("city") @db.VarChar(100)
  state        String @map("state") @db.VarChar(50)
  zipcode      String @map("zipcode") @db.VarChar(11)

  @@index([uuid, zipcode, city, state])
  @@map("Addresses")
}
